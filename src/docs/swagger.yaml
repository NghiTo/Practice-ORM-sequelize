openapi: 3.0.3
info:
  title: Company
  version: 1.0.11
servers:
  - url: http://localhost:3000
paths:
  /api/users/register:
    post:
      tags:
        - User
      summary: Registration
      description: Create a new user
      operationId: register
      requestBody:
        description: Create a new user account in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: nghito
                password:
                  type: string
                  example: 123456@
                employeeNumber:
                  type: number
                  example: 1
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: User is created successfully
        "400":
          description: Validation failed
        "404": 
          description: Employee is not found
  /api/users/login:
    post:
      tags:
        - User
      summary: Login
      description: login
      operationId: login
      requestBody:
        description: Create a new user account in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: nghito
                password:
                  type: string
                  example: 123456@
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Login successfully
        "400":
          description: Wrong username or password
  /api/employees:
    post:
      tags:
        - Employee
      summary: Create a new employee
      description: Create a new employee
      operationId: Create a new employee
      requestBody:
        description: Create a new employee in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                lastName:
                  type: string
                  example: Jones
                firstName:
                  type: string
                  example: Emily
                extension:
                  type: string
                  example: x1238
                email:
                  type: string
                  example: emily.jones@example.com
                officeCode:
                  type: string
                  example: 2
                reportsTo:
                  type: number
                  example: 1
                jobTitle:
                  type: string
                  example: Leader
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Employee is created successfully     
        "400":
          description: Validation failed
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/:
    get:
      tags:
        - Employee
      summary: Get all employees
      description: Get all employees
      operationId: Get all employees
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastName:
                    type: string
                    example: Jones
                  firstName:
                    type: string
                    example: Emily
                  extension:
                    type: string
                    example: x1238
                  email:
                    type: string
                    example: emily.jones@example.com
                  officeCode:
                    type: string
                    example: 2
                  reportsTo:
                    type: number
                    example: 1
                  jobTitle:
                    type: string
                    example: Leader
        "404":
          description: Employee not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/{id}:
    get:
      tags:
        - Employee
      summary: Get employee by employee number
      description: ""
      operationId: Get employee info by employee number in the company
      parameters:
        - name: id
          in: path
          description: Enter employee number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastName:
                    type: string
                    example: Jones
                  firstName:
                    type: string
                    example: Emily
                  extension:
                    type: string
                    example: x1238
                  email:
                    type: string
                    example: emily.jones@example.com
                  officeCode:
                    type: string
                    example: 2
                  reportsTo:
                    type: number
                    example: 1
                  jobTitle:
                    type: string
                    example: Leader
        "404":
          description: Employee not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/{id}/:
    put:
      tags:
        - Employee
      summary: Update employee by employee number
      description: ""
      operationId: Update employee info by employee number in the company
      parameters:
        - name: id
          in: path
          description: Enter employee number
          required: true
          schema:
            type: integer
      requestBody:
        description: Create a new employee in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                lastName:
                  type: string
                  example: Slick
                firstName:
                  type: string
                  example: Back
                extension:
                  type: string
                  example: p2465
                email:
                  type: string
                  example: handsome@example.com
                officeCode:
                  type: string
                  example: 2
                reportsTo:
                  type: number
                  example: 1
                jobTitle:
                  type: string
                  example: Leader
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Employee is updated  successfully
        "400":
          description: Validation failed
        "404":
          description: Employee not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/{id}?:
    delete:
      tags:
        - Employee
      summary: Delete employee by employee number
      description: ""
      operationId: Delete employee info by employee number in the company
      parameters:
        - name: id
          in: path
          description: Enter employee number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: Employee is deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Employee is not found
      security:
        - bearerAuth: []
  /api/customers:
    post:
      tags:
        - Customer
      summary: Create a new Customer
      description: Create a new customer
      operationId: Create a new customer
      requestBody:
        description: Create a new customer in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                customerName:
                  type: string
                  example: Globex Corporation
                contactLastName:
                  type: string
                  example: Shift
                contactFirstName:
                  type: string
                  example: Jane
                phone:
                  type: string
                  example: 234-567-8901
                addressLine1:
                  type: string
                  example: 456 Elm St
                addressLine2:
                  type: string
                  example: Apt 1A Aiu St
                city:
                  type: string
                  example: Othertown
                state:
                  type: string
                  example: TX
                postalCode:
                  type: string
                  example: 67890
                country:
                  type: string
                  example: USA
                salesRepEmployeeNumber:
                  type: number
                  example: 4
                creditLimit:
                  type: number
                  example: 75000
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Customer is created successfully
        "400":
          description: Validation failed
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/:
    get:
      tags:
        - Customer
      summary: Get all customers
      description: Get all customers
      operationId: Get all customers
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerName:
                    type: string
                    example: Globex Corporation
                  contactLastName:
                    type: string
                    example: Shift
                  contactFirstName:
                    type: string
                    example: Jane
                  phone:
                    type: string
                    example: 234-567-8901
                  addressLine1:
                    type: string
                    example: 456 Elm St
                  addressLine2:
                    type: string
                    example: Apt 1A Aiu St
                  city:
                    type: string
                    example: Othertown
                  state:
                    type: string
                    example: TX
                  postalCode:
                    type: string
                    example: 67890
                  country:
                    type: string
                    example: USA
                  salesRepEmployeeNumber:
                    type: number
                    example: 4
                  creditLimit:
                    type: number
                    example: 75000
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/{id}:
    get:
      tags:
        - Customer
      summary: Get customer by employee number
      description: ""
      operationId: Get customer info by customer number in the company
      parameters:
        - name: id
          in: path
          description: Enter customer number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerName:
                    type: string
                    example: Globex Corporation
                  contactLastName:
                    type: string
                    example: Shift
                  contactFirstName:
                    type: string
                    example: Jane
                  phone:
                    type: string
                    example: 234-567-8901
                  addressLine1:
                    type: string
                    example: 456 Elm St
                  addressLine2:
                    type: string
                    example: Apt 1A Aiu St
                  city:
                    type: string
                    example: Othertown
                  state:
                    type: string
                    example: TX
                  postalCode:
                    type: string
                    example: 67890
                  country:
                    type: string
                    example: USA
                  salesRepEmployeeNumber:
                    type: number
                    example: 4
                  creditLimit:
                    type: number
                    example: 75000
        "404":
          description: Customer is not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/{id}/:
    put:
      tags:
        - Customer
      summary: Update customer by customer number
      description: ""
      operationId: Update customer info by customer number in the company
      parameters:
        - name: id
          in: path
          description: Enter customer number
          required: true
          schema:
            type: integer
      requestBody:
        description: Update a customer in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                customerName:
                  type: string
                  example: Globex Corporation
                contactLastName:
                  type: string
                  example: Shift
                contactFirstName:
                  type: string
                  example: Jane
                phone:
                  type: string
                  example: 234-567-8901
                addressLine1:
                  type: string
                  example: 456 Elm St
                addressLine2:
                  type: string
                  example: Apt 1A Aiu St
                city:
                  type: string
                  example: Othertown
                state:
                  type: string
                  example: TX
                postalCode:
                  type: string
                  example: 67890
                country:
                  type: string
                  example: USA
                salesRepEmployeeNumber:
                  type: number
                  example: 4
                creditLimit:
                  type: number
                  example: 75000
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Customer is updated successfully
        "400":
          description: Validation failed
        "404":
          description: Customer is not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/{id}?:
    delete:
      tags:
        - Customer
      summary: Delete customer by customer number
      description: ""
      operationId: Delete customer info by customer number in the company
      parameters:
        - name: id
          in: path
          description: Enter customer number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: Customer is deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
